//
//  CreatePinPresenter.swift
//  PLAN-IT
//
//  Created by KiwiTech on 04/09/19.
//  Copyright (c) 2019 KiwiTech. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
protocol CreatePinPresentationLogic {
    func showError(text: String)
    func handle(response: Response<UserResponse>)
    func handleVerify(response: Response<StaticMessgaeResponse>)
}

class CreatePinPresenter: CreatePinPresentationLogic {
    weak var viewController: CreatePinDisplayLogic?
    func showError(text: String) {
        viewController?.showAlertFor(text: text, code: 0)
    }
    func handle(response: Response<UserResponse>) {
        if response.isSuccess, let value = response.value {
            AppStateManager.shared.user?.isPinAdded = value.data?.isPinAdded
            viewController?.createPin(data: value.detail)
        } else {
            let msg = NetworkManager.shared.errorString(from: response)
            viewController?.showAlertFor(text: msg ?? .failedTo(.proceed) + "\n" + .tryAgainInTime, code: 0)
        }
    }
    func handleVerify(response: Response<StaticMessgaeResponse>) {
        if response.isSuccess, let value = response.value {
            viewController?.createPin(data: value.detail)
        } else {
            let msg = NetworkManager.shared.errorString(from: response)
            viewController?.showAlertFor(text: msg ?? .failedTo(.proceed) + "\n" + .tryAgainInTime, code: response.statusCode ?? 0)
        }
    }
}
