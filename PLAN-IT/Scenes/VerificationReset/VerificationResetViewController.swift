//
//  VerificationResetViewController.swift
//  PLAN-IT
//
//  Created by KiwiTech on 12/07/19.
//  Copyright (c) 2019 KiwiTech. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Nantes
protocol VerificationResetDisplayLogic: class {
    func showAlertFor(text: String)
    func emailSent(with message: String)
    func updateUI(value: VerificationReset.ViewModel)
}

class VerificationResetViewController: BaseViewController, VerificationResetDisplayLogic {
    var interactor: VerificationResetBusinessLogic?
    var router: (NSObjectProtocol & VerificationResetRoutingLogic & VerificationResetDataPassing)?
    var email: String?
    @IBOutlet weak var titleLabel: UILabel!
    @IBOutlet weak var descriptionLabel: UILabel!
    @IBOutlet weak var resendLabel: NantesLabel!
    @IBOutlet weak var descLabel: UILabel!
    var isFromSignUp = false
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = VerificationResetInteractor()
        let presenter = VerificationResetPresenter()
        let router = VerificationResetRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        descLabel.setLineSpacing(lineSpacing: 5.0, lineHeightMultiple: 0.0, alignment: .left)
        setResendLabel()
        checkEmail()
    }
    func checkEmail() {
        let request = VerificationReset.ViewModel()
        interactor?.checkEmail(request: request)
    }
    func setResendLabel() {
        self.resendLabel.delegate = self
        let text = String.resendText
        self.resendLabel.text = text
        self.resendLabel.linkAttributes = [
            NSAttributedString.Key.foregroundColor: UIColor(name: .defaultColor),
            NSAttributedString.Key.font: UIFont(font: (name: UIFont.FontName.karla, varient: UIFont.FontVarient.bold), size: 11) ?? UIFont.systemFont(ofSize: 11.0),
            NSAttributedString.Key.underlineStyle: NSUnderlineStyle.single.rawValue, NSAttributedString.Key.underlineColor: UIColor(name: .defaultColor)
        ]
        self.resendLabel.addLink(to: URL(string: .resendLink)!, withRange: (text as NSString).range(of: .resend))
    }
    func updateUI(value: VerificationReset.ViewModel) {
        isFromSignUp = value.isFromSignUp ?? true
        email = value.email
        if isFromSignUp {
            titleLabel.text = .emailSent
            descriptionLabel.text = .emailSentDescription + (value.email ?? "") + .verifyEmailText
        } else {
            titleLabel.text = .linkSent
            descriptionLabel.text = .linkSentDescription
        }
    }
    func emailSent(with message: String) {
        hideLoader()
        AppUtils.showBanner(with: message, type: .done)
    }
    func showAlertFor(text: String) {
        hideLoader()
        AppUtils.showBanner(with: text)
    }
    @IBAction func backToSigninBtnAction(_ sender: Any) {
        navigationController?.popToRootViewController(animated: true)
    }
}
extension VerificationResetViewController: NantesLabelDelegate {
    func attributedLabel(_ label: NantesLabel, didSelectAddress addressComponents: [NSTextCheckingKey: String]) {
        print("Tapped address: \(addressComponents)")
    }
    func attributedLabel(_ label: NantesLabel, didSelectDate date: Date, timeZone: TimeZone, duration: TimeInterval) {
        print("Tapped Date: \(date), in time zone: \(timeZone), with duration: \(duration)")
    }
    func attributedLabel(_ label: NantesLabel, didSelectLink link: URL) {
        if link.absoluteString == String.resendLink {
            showLoader()
            isFromSignUp ? self.interactor?.resendEmail(email: email) : self.interactor?.forgotPassword(for: email)
        }
    }
    func attributedLabel(_ label: NantesLabel, didSelectPhoneNumber phoneNumber: String) {
        print("Tapped phone number: \(phoneNumber)")
    }
    func attributedLabel(_ label: NantesLabel, didSelectTransitInfo transitInfo: [NSTextCheckingKey: String]) {
        print("Tapped transit info: \(transitInfo)")
    }
}
