//
//  LessonListPresenter.swift
//  PLAN-IT
//
//  Created by KiwiTech on 08/08/19.
//  Copyright (c) 2019 KiwiTech. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
protocol LessonListPresentationLogic {
    func fetchLesson(value: Course?, lesson: [Lesson]?)
    func showError(text: String)
    func handle(response: Response<LessonDetailResponse>)
    func handleLessonRead(response: Response<StaticMessgaeResponse>)
}

class LessonListPresenter: LessonListPresentationLogic {
  weak var viewController: LessonListDisplayLogic?
  // MARK: Do something
    func fetchLesson(value: Course?, lesson: [Lesson]?) {
        viewController?.fetchLesson(value: value, lesson: lesson)
    }
    func showError(text: String) {
        viewController?.showAlertFor(text: text)
    }
    func handle(response: Response<LessonDetailResponse>) {
        if response.isSuccess, let value = response.value {
            viewController?.fetchedLessonDetail(data: value.data)
        } else {
            let msg = NetworkManager.shared.errorString(from: response)
            viewController?.showAlertFor(text: msg ?? .failedTo(.proceed) + "\n" + .tryAgainInTime)
        }
    }
    func handleLessonRead(response: Response<StaticMessgaeResponse>) {
        if response.isSuccess, let value = response.value {
            viewController?.lessonRead(text: value.detail ?? "")
        } else {
            let msg = NetworkManager.shared.errorString(from: response)
            viewController?.showAlertFor(text: msg ?? .failedTo(.proceed) + "\n" + .tryAgainInTime)
        }
    }
}
