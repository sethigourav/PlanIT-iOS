//
//  SignUpInteractor.swift
//  PLAN-IT
//
//  Created by KiwiTech on 08/07/19.
//  Copyright (c) 2019 KiwiTech. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
protocol SignUpBusinessLogic {
    func signUp(with request: SignUp.Request)
}

protocol SignUpDataStore {
    //var name: String { get set }
}

class SignUpInteractor: SignUpBusinessLogic, SignUpDataStore {
    var presenter: SignUpPresentationLogic?
    var worker: SignUpWorker?
    func signUp(with request: SignUp.Request) {
        if worker == nil {
            worker = SignUpWorker()
        }
        do {
            try worker?.signupUser(request: request, completion: { [weak self] (response) in
                self?.presenter?.handle(response: response)
            })
        } catch let exception {
            handle(exception: exception)
        }
    }
    fileprivate func handle(exception: Error) {
        switch exception {
        case SignUpErrors.invalidEmail:
            presenter?.showValidationError(text: .incorrectEmail)
        default:
            presenter?.showError(text: .somethingWentWrong + "\n" + .tryAgainInTime)
        }
    }
}
