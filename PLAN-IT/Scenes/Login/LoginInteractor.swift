//
//  LoginInteractor.swift
//  i-Mar
//
//  Created by KiwiTech on 01/07/19.
//  Copyright (c) 2019 KiwiTech. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic {
    func login(with request: Login.Request)
}

protocol LoginDataStore {
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
    func login(with request: Login.Request) {
        if worker == nil {
            worker = LoginWorker()
        }
        do {
            try worker?.login(request: request, completion: { [weak self] (response) in
                self?.presenter?.handle(response: response)
            })
        } catch let exception {
            handle(exception: exception)
        }
    }
    fileprivate func handle(exception: Error) {
        switch exception {
        case LoginErrors.blankField:
            presenter?.showValidationError(text: .blankFields)
        case LoginErrors.invalidEmail:
            presenter?.showValidationError(text: .incorrectEmail)
        default:
            presenter?.showError(text: .somethingWentWrong + "\n" + .tryAgainInTime)
        }
    }
}
